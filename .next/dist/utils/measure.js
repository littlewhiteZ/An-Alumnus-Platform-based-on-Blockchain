'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var measure = function () {
    var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(title, fn) {
        var start, res;
        return _regenerator2.default.wrap(function _callee$(_context) {
            while (1) {
                switch (_context.prev = _context.next) {
                    case 0:
                        console.log('===Measure===', title);
                        start = performance.now();
                        _context.next = 4;
                        return fn();

                    case 4:
                        res = _context.sent;

                        console.log('===Done===', performance.now() - start);
                        return _context.abrupt('return', res);

                    case 7:
                    case 'end':
                        return _context.stop();
                }
            }
        }, _callee, this);
    }));

    function measure(_x, _x2) {
        return _ref.apply(this, arguments);
    }

    return measure;
}();

exports.default = measure;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsibWVhc3VyZSIsIl9yZWYiLCJtYXJrIiwiX2NhbGxlZSIsInRpdGxlIiwiZm4iLCJzdGFydCIsInJlcyIsIndyYXAiLCJfY2FsbGVlJCIsIl9jb250ZXh0IiwicHJldiIsIm5leHQiLCJjb25zb2xlIiwibG9nIiwicGVyZm9ybWFuY2UiLCJub3ciLCJzZW50IiwiYWJydXB0Iiwic3RvcCIsIl94IiwiX3gyIiwiYXBwbHkiLCJhcmd1bWVudHMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7OztBQUNBLElBQUlBLFVBQVUsWUFBWTtBQUN0QixRQUFJQyxPQUFPLGlDQUFtQixhQUFhLHNCQUFvQkMsSUFBcEIsQ0FBeUIsU0FBU0MsT0FBVCxDQUFpQkMsS0FBakIsRUFBd0JDLEVBQXhCLEVBQTRCO0FBQzVGLFlBQUlDLEtBQUosRUFBV0MsR0FBWDtBQUNBLGVBQU8sc0JBQW9CQyxJQUFwQixDQUF5QixTQUFTQyxRQUFULENBQWtCQyxRQUFsQixFQUE0QjtBQUN4RCxtQkFBTyxDQUFQLEVBQVU7QUFDTix3QkFBUUEsU0FBU0MsSUFBVCxHQUFnQkQsU0FBU0UsSUFBakM7QUFDSSx5QkFBSyxDQUFMO0FBQ0lDLGdDQUFRQyxHQUFSLENBQVksZUFBWixFQUE2QlYsS0FBN0I7QUFDQUUsZ0NBQVFTLFlBQVlDLEdBQVosRUFBUjtBQUNBTixpQ0FBU0UsSUFBVCxHQUFnQixDQUFoQjtBQUNBLCtCQUFPUCxJQUFQOztBQUVKLHlCQUFLLENBQUw7QUFDSUUsOEJBQU1HLFNBQVNPLElBQWY7O0FBRUFKLGdDQUFRQyxHQUFSLENBQVksWUFBWixFQUEwQkMsWUFBWUMsR0FBWixLQUFvQlYsS0FBOUM7QUFDQSwrQkFBT0ksU0FBU1EsTUFBVCxDQUFnQixRQUFoQixFQUEwQlgsR0FBMUIsQ0FBUDs7QUFFSix5QkFBSyxDQUFMO0FBQ0EseUJBQUssS0FBTDtBQUNJLCtCQUFPRyxTQUFTUyxJQUFULEVBQVA7QUFmUjtBQWlCSDtBQUNKLFNBcEJNLEVBb0JKaEIsT0FwQkksRUFvQkssSUFwQkwsQ0FBUDtBQXFCSCxLQXZCMEMsQ0FBaEMsQ0FBWDs7QUF5QkEsYUFBU0gsT0FBVCxDQUFpQm9CLEVBQWpCLEVBQXFCQyxHQUFyQixFQUEwQjtBQUN0QixlQUFPcEIsS0FBS3FCLEtBQUwsQ0FBVyxJQUFYLEVBQWlCQyxTQUFqQixDQUFQO0FBQ0g7O0FBRUQsV0FBT3ZCLE9BQVA7QUFDSCxDQS9CYSxFQUFkOztrQkFpQ2VBLE8iLCJmaWxlIjoidW5rbm93biIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfcmVnZW5lcmF0b3JSdW50aW1lIGZyb20gJ2JhYmVsLXJ1bnRpbWUvcmVnZW5lcmF0b3InO1xuaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yJztcbnZhciBtZWFzdXJlID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSh0aXRsZSwgZm4pIHtcbiAgICAgICAgdmFyIHN0YXJ0LCByZXM7XG4gICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHtcbiAgICAgICAgICAgIHdoaWxlICgxKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnPT09TWVhc3VyZT09PScsIHRpdGxlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0ID0gcGVyZm9ybWFuY2Uubm93KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmbigpO1xuXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNDpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCc9PT1Eb25lPT09JywgcGVyZm9ybWFuY2Uubm93KCkgLSBzdGFydCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCdyZXR1cm4nLCByZXMpO1xuXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNzpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnZW5kJzpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LCBfY2FsbGVlLCB0aGlzKTtcbiAgICB9KSk7XG5cbiAgICBmdW5jdGlvbiBtZWFzdXJlKF94LCBfeDIpIHtcbiAgICAgICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbWVhc3VyZTtcbn0oKTtcblxuZXhwb3J0IGRlZmF1bHQgbWVhc3VyZTsiXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsibWVhc3VyZSIsIl9yZWYiLCJtYXJrIiwiX2NhbGxlZSIsInRpdGxlIiwiZm4iLCJzdGFydCIsInJlcyIsIndyYXAiLCJfY2FsbGVlJCIsIl9jb250ZXh0IiwicHJldiIsIm5leHQiLCJjb25zb2xlIiwibG9nIiwicGVyZm9ybWFuY2UiLCJub3ciLCJzZW50IiwiYWJydXB0Iiwic3RvcCIsIl94IiwiX3gyIiwiYXBwbHkiLCJhcmd1bWVudHMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7OztBQUNBLElBQUlBLFVBQVUsWUFBWTtBQUN0QixRQUFJQyxPQUFPLGlDQUFtQixhQUFhLHNCQUFvQkMsSUFBcEIsQ0FBeUIsU0FBU0MsT0FBVCxDQUFpQkMsS0FBakIsRUFBd0JDLEVBQXhCLEVBQTRCO0FBQzVGLFlBQUlDLEtBQUosRUFBV0MsR0FBWDtBQUNBLGVBQU8sc0JBQW9CQyxJQUFwQixDQUF5QixTQUFTQyxRQUFULENBQWtCQyxRQUFsQixFQUE0QjtBQUN4RCxtQkFBTyxDQUFQLEVBQVU7QUFDTix3QkFBUUEsU0FBU0MsSUFBVCxHQUFnQkQsU0FBU0UsSUFBakM7QUFDSSx5QkFBSyxDQUFMO0FBQ0lDLGdDQUFRQyxHQUFSLENBQVksZUFBWixFQUE2QlYsS0FBN0I7QUFDQUUsZ0NBQVFTLFlBQVlDLEdBQVosRUFBUjtBQUNBTixpQ0FBU0UsSUFBVCxHQUFnQixDQUFoQjtBQUNBLCtCQUFPUCxJQUFQOztBQUVKLHlCQUFLLENBQUw7QUFDSUUsOEJBQU1HLFNBQVNPLElBQWY7O0FBRUFKLGdDQUFRQyxHQUFSLENBQVksWUFBWixFQUEwQkMsWUFBWUMsR0FBWixLQUFvQlYsS0FBOUM7QUFDQSwrQkFBT0ksU0FBU1EsTUFBVCxDQUFnQixRQUFoQixFQUEwQlgsR0FBMUIsQ0FBUDs7QUFFSix5QkFBSyxDQUFMO0FBQ0EseUJBQUssS0FBTDtBQUNJLCtCQUFPRyxTQUFTUyxJQUFULEVBQVA7QUFmUjtBQWlCSDtBQUNKLFNBcEJNLEVBb0JKaEIsT0FwQkksRUFvQkssSUFwQkwsQ0FBUDtBQXFCSCxLQXZCMEMsQ0FBaEMsQ0FBWDs7QUF5QkEsYUFBU0gsT0FBVCxDQUFpQm9CLEVBQWpCLEVBQXFCQyxHQUFyQixFQUEwQjtBQUN0QixlQUFPcEIsS0FBS3FCLEtBQUwsQ0FBVyxJQUFYLEVBQWlCQyxTQUFqQixDQUFQO0FBQ0g7O0FBRUQsV0FBT3ZCLE9BQVA7QUFDSCxDQS9CYSxFQUFkOztrQkFpQ2VBLE8iLCJmaWxlIjoidW5rbm93biJ9